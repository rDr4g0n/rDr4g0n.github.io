{"version":3,"file":"app.js","sources":["utils.js","PortfolioItem.js","app.js"],"sourcesContent":["\"use strict\";\n\n// poor man's event delegation\n// TODO - upper limit on this recursion\nfunction delegate(el, selector, parent){\n    // walked all the way up or like, asplode\n    if(!el || el === parent){\n        return;\n    }\n\n    // fount it!\n    if(el.matches(selector)){\n        return el;\n    // lets walk up another level\n    } else {\n        return delegate(el.parentNode, selector, parent);\n    }\n}\n\nfunction addEventDelegateListener(el, eventName, selector, handler){\n    let fn = function(e){\n        let delegateTarget = delegate(e.target, selector, el);\n        if(delegateTarget){\n            handler(e, delegateTarget); \n        }\n    };\n    el.addEventListener(eventName, fn);\n    return function removeEventDelegateListener(){\n        el.removeEventListener(eventName, fn);\n    };\n}\n\nfunction pokeDOM(){\n    return document.body.offsetLeft;\n}\n\nfunction getScrollTop(){\n    return document.body.scrollTop || document.documentElement.scrollTop;\n}\n\nexport {\n    delegate,\n    addEventDelegateListener,\n    pokeDOM,\n    getScrollTop\n};\n","/* global baffle: true */\n\"use strict\";\n\nimport {pokeDOM} from \"utils\";\nlet baffleConfig = {characters: \" ░▒▓█</>\"};\n\nexport default class PortfolioItem {\n    constructor(navEl){\n        this.navEl = navEl;\n        this.id = navEl.hash.slice(1);\n        this.portfolioEl = document.getElementById(this.id);\n        this.cacheOffsetTop();\n\n        this.selected = false;\n\n        // make mouseover title trigger baffle effect\n        let titleEl = this.portfolioEl.querySelector(\".item-title\");\n        this.b = baffle(titleEl, baffleConfig);\n        titleEl.addEventListener(\"mouseover\", e => {\n            this.baffleTitle();\n        });\n\n        // NOTE - working around css transtions not working\n        // on elements with dimensions set by \"auto\"\n        this.navEl.classList.add(\"selected\");\n        pokeDOM();\n        this.navElExpandedWidth = window.getComputedStyle(this.navEl).width;\n        this.navEl.classList.remove(\"selected\");\n\n        // add explicit widths on hover to \n        // enable css transitions\n        this.navEl.addEventListener(\"mouseover\", e => {\n            this.navEl.style.width = this.navElExpandedWidth;\n        });\n        this.navEl.addEventListener(\"mouseout\", e => {\n            if(!this.selected){\n                this.navEl.style.removeProperty(\"width\");\n            }\n        });\n\n    }\n\n    // cache offsetTop to avoid expensive DOM lookups\n    cacheOffsetTop(){\n        this.offsetTop = this.portfolioEl.offsetTop;\n    }\n\n    // select nav el\n    select(skipBaffle){\n        if(!this.selected){\n            if(!skipBaffle){\n                this.baffleTitle();\n            }\n            this.selected = true;\n            this.navEl.classList.add(\"selected\");\n            this.navEl.style.width = this.navElExpandedWidth;\n        }\n    }\n\n    // deselect nav\n    deselect(){\n        if(this.selected){\n            this.selected = false;\n            this.navEl.classList.remove(\"selected\");\n            this.navEl.style.removeProperty(\"width\");\n        }\n    }\n\n    // apply baffle effect to portfolio item title\n    baffleTitle(){\n        // TODO - baffle seems to ignore numbers\n        // higher than 1000 here :/\n        this.b.reveal(1000);\n    }\n}\n","/* globals console: true, baffle: true, Blazy: true, Gifffer: true */\n\"use strict\";\n\nimport {addEventDelegateListener, pokeDOM, getScrollTop} from \"utils\";\nimport PortfolioItem from \"PortfolioItem\";\n\n// TODO - these should all be part of App\nlet bodyEl = document.body,\n    lastScrollPos = getScrollTop(),\n    scrollSensitivity = 70,\n    // TODO - should be a function of screen height\n    offsetPadding = 65,\n    width = window.outerWidth;\n\nconst MOBILE_BREAKPOINT = 500;\n\nclass App {\n\n    constructor(){\n        let navItemEls = document.querySelectorAll(\".nav-item\");\n        this.items = Array.prototype.map.call(navItemEls, el => new PortfolioItem(el));\n\n        // once the entire document has loaded, recalculate offsets\n        window.addEventListener(\"load\", e => {\n            this.refreshNavSelection();\n        });\n\n        // TODO - debounce\n        // on resize, recalculate offsets\n        window.addEventListener(\"resize\", e => {\n            this.refreshNavSelection();\n            // cache window width\n            width = window.outerWidth;\n        });\n\n        // as the page scrolls, select the appropriate nav el\n        window.addEventListener(\"scroll\", e => {\n            // dont bother updating nav if this is mobile-sized\n            if(this.isMobile()){\n                return;\n            }\n\n            if(Math.abs(getScrollTop() - lastScrollPos) > scrollSensitivity){\n                this.selectMostVisibleItem();\n            }\n        });\n\n        // lazy load images\n        new Blazy({\n            success: (el, msg) => {\n                // if its a gif, add a play button\n                if(el.matches(\".gifify\")){\n                    el.setAttribute(\"data-gifffer\", el.getAttribute(\"src\"));\n                    Gifffer();\n                }\n\n                // image size was just a placeholder, so kill it\n                el.style.width = \"unset\";\n                el.style.height = \"unset\";\n\n                // image load means portfolio offsets\n                // may have changed, so update em\n                app.refreshNavSelection();\n            }\n        });\n\n        // make all non-local links open in new tab\n        Array.prototype.forEach.call(document.querySelectorAll(\"a\"), el => {\n            if(!el.href.includes(document.location.origin)){\n                el.setAttribute(\"target\", \"_blank\");\n            }\n        });\n\n        // make nav clickies select the nav element\n        addEventDelegateListener(document.querySelector(\".main-nav\"), \"click\", \".nav-item\", (e, target) => {\n            this.getPortfolioItemForNavEl(target);\n        });\n\n        // figure out which portfolio item is visible and select it\n        this.refreshNavSelection();\n    }\n\n    // if this is mobile-device-sized, nav gets hidden\n    // so dont bother with all the expensive nav update stuff\n    isMobile(){\n        return width <= MOBILE_BREAKPOINT;\n    }\n\n    getPortfolioItemForNavEl(el){\n        for(let i = 0; i < this.items.length; i++){\n            if(this.items[i].navEl == el){\n                return this.items[i];\n            }\n        }\n    }\n\n    selectPortfolioItem(portfolioItem){\n        this.items.forEach(item => {\n            if(item === portfolioItem){\n                // select, but dont animate if \n                // mobile-sized\n                item.select(this.isMobile() ? true : false);\n            } else {\n                item.deselect();\n            }\n        });\n    }\n\n    // accessing offsetTop triggers a reflow, so cache\n    // it when possible\n    // TODO - debounce\n    updatePortfolioItemOffsets(){\n        this.items.forEach(item => item.cacheOffsetTop());\n    }\n\n    calculateMostVisiblePortfolioItem(){\n        lastScrollPos = getScrollTop();\n        let item, offsetTop;\n\n        // TODO - maybe rank items by most pixels in view?\n\n        // if near the end, select the last item\n        if(bodyEl.scrollHeight - lastScrollPos - bodyEl.clientHeight < scrollSensitivity){\n            //return this.items[this.items.length-1];\n            return;\n        }\n\n        // otherwise, figure out which item is nearest top\n        for(let i = this.items.length-1; i >= 0; i--){\n            item = this.items[i];\n            offsetTop = item.offsetTop - offsetPadding;\n\n            if(offsetTop < lastScrollPos){\n                return item;\n            }\n        }\n\n        // must be way up topsies, so select first\n        //return this.items[0];\n    }\n\n    selectMostVisibleItem(){\n        // see if selection should be updated\n        let mostVisible = this.calculateMostVisiblePortfolioItem();\n        if(mostVisible !== this.mostVisible){\n            this.mostVisible = mostVisible;\n            this.selectPortfolioItem(mostVisible);\n        }\n    }\n\n    refreshNavSelection(){\n        // dont even\n        if(this.isMobile()){\n            return;\n        }\n\n        // update offsets cache\n        this.updatePortfolioItemOffsets();\n        // make sure the right nav el is selected after\n        // calculating new offsets\n        this.selectMostVisibleItem();\n    }\n\n}\n\nlet app = new App();\n"],"names":["delegate","el","selector","parent","matches","parentNode","addEventDelegateListener","eventName","handler","fn","e","delegateTarget","target","addEventListener","removeEventDelegateListener","removeEventListener","pokeDOM","document","body","offsetLeft","getScrollTop","scrollTop","documentElement","baffleConfig","characters","PortfolioItem","navEl","id","hash","slice","portfolioEl","getElementById","cacheOffsetTop","selected","titleEl","querySelector","b","baffle","baffleTitle","classList","add","navElExpandedWidth","window","getComputedStyle","width","remove","style","removeProperty","offsetTop","skipBaffle","reveal","bodyEl","lastScrollPos","scrollSensitivity","offsetPadding","outerWidth","MOBILE_BREAKPOINT","App","navItemEls","querySelectorAll","items","Array","prototype","map","call","refreshNavSelection","isMobile","Math","abs","selectMostVisibleItem","Blazy","msg","setAttribute","getAttribute","height","forEach","href","includes","location","origin","getPortfolioItemForNavEl","i","length","portfolioItem","item","select","deselect","scrollHeight","clientHeight","mostVisible","calculateMostVisiblePortfolioItem","selectPortfolioItem","updatePortfolioItemOffsets","app"],"mappings":"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","sourceRoot":"/source/"}